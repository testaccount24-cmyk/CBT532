<<$CCA>> : A1=MEMBER  <A2=REP/SUB>  <A3=REP/SUB> A4=LAST?(YES=0)
  EXEC PFX.CCSESSET
  SET STMTCNT MAX
  DECLARE MEMBER REPLACE ROSMEM SUBMIT SAVE<3> EMSG<3>
  DECLARE NVAR PTR CARD CURPOS NMSG RETINFO<5>
  LET MEMBER = A1
  IF A2 EQ 'REP' OR A3 EQ 'REP'
      LET REPLACE = 'Y'
  ELSE
      LET REPLACE = 'N'
  ENDIF
  IF A2 EQ 'SUB' OR A3 EQ 'SUB'
      LET SUBMIT = 'Y'
  ELSE
      LET SUBMIT = 'N'
  ENDIF
  DECLARE VARS<14> DESC<14> MSGS<14>
  LET NVAR = 14                     : NUMBER OF VARIABLE NAMES IN PANEL
  LET VARS<01> = 'SRCE'
  LET VARS<02> = 'MAPC'
  LET VARS<03> = 'OLNK'
  LET VARS<04> = 'APID'
  LET VARS<05> = 'ENVR'
  LET VARS<06> = 'ACBK'
  LET VARS<07> = 'ALOP'
  LET VARS<08> = 'AMOP'
  LET VARS<09> = 'JNAM'
  LET VARS<10> = 'ACCT'
  LET VARS<11> = 'ROOM'
  LET VARS<12> = 'UNAM'
  LET VARS<13> = 'MSGC'
  LET VARS<14> = 'REMT'
  DO <<GETDEFS>>
  DO <<EDITS>>
  LOOP
    UNTIL NMSG EQ 0 AND SUBMIT NE 'N'
      PANEL ACTIVATE PFX.CCAXXPAN
      DO <<PUTPAN>>
     %PANEL SEND CURSOR P.%CURPOS%
      LET CURPOS = ''
      IF AID EQ 'CLEAR'
          LET NMSG = 0
          LET SUBMIT = 'Q'
      ELSE
          DO <<GETPAN>>
          DO <<EDITS>>
          SELECT FIRST
            WHEN AID EQ 'PF1'
              EXEC PFX.CCHLPSHO 'CCAXX'
              SELECT AWS ROS1
            WHEN AID EQ 'PF2'
              EXEC PFX.CCDEFSET
              DO <<GETDEFS>>
          ENDSEL
          SELECT FIRST
            WHEN NMSG NE 0
              RELOOP
            WHEN AID EQ 'PF9'
              LET SUBMIT = 'Y'
            WHEN AID EQ 'PF8'
              LET SUBMIT = 'A'
          ENDSEL
      ENDIF
  ENDLOOP
  SELECT FIRST
    WHEN SUBMIT EQ 'Y'
      DO <<BUILDJCL>>
      SET MSGLEVEL ERROR
      SUBMIT
      LET PTR = INDEX(LASTERR ' <')
      IF PTR LE 0
          LET PTR = LENGTH(LASTERR)
      ENDIF
     %LET CARD = SUBSTR(LASTERR 1 %PTR%)
      CREATE AWS CCMSGS NONRECOVERABLE LEVEL
      TRAP
      FETCH $$CCMSGS
      TRAP OFF
      %%AWSCOUNT+1% %CARD%
      UPDATE $$CCMSGS
    WHEN SUBMIT EQ 'A'
      DO <<BUILDJCL>>
      ATTACH
      IF A4 GT 0
          RESPONSE 'WHEN READY TO CONTINUE, ENTER "GO"'
          PAUSE
      ENDIF
    WHEN NONE
      DELETE
  ENDSEL
  RETURN
<<GETDEFS>> PROC
  LOOP PTR FROM 1 TO NVAR BY 1
      EXEC PFX.CCDEFGET VARS<PTR>
      LET DESC<PTR> = R1
  ENDLOOP
  SELECT AWS ROS1
ENDPROC
<<BUILDJCL>> PROC
  SELECT AWS ROS1
  DELETE
  COPY PFX.CCJOBJCL T
:::::::::::::: INSERT ACS DESTINATION INFO
  TRAP ON
  COPY ACSDEST B
  %EDIT /&TITLE1/%MEMBER%/
  TRAP OFF
  LOOP PTR FROM 1 TO NVAR BY 1
    UNTIL VARS<PTR> EQ 'ACBK'
  ENDLOOP
 %COPY PFX.CCA%DESC<PTR>%XJCL B
  IF DESC<PTR> EQ 'S'
      LOOP PTR FROM 1 TO NVAR BY 1
        UNTIL VARS<PTR> EQ 'APID'
      ENDLOOP
      IF DESC<PTR> EQ 'ACS'
          EDIT /?LNAMD/?MEMB/
          EDIT /CLASS=J/CLASS=K/
      ENDIF
  ENDIF
  TRAP
  LET CARD = ''
  LOOP PTR FROM 1 TO NVAR BY 1
      SELECT FIRST
        WHEN VARS<PTR> EQ 'APID'
          IF TRIM(DESC<PTR>) EQ 'ACS'
:*--------------------------------------------------------------------*
:*            FIND /AUXINC1/                                          *
:*           %EDIT /HHLQ?APID.SAT.LIBMAST/PROD.SOURCE.LIBMAST/%SEQ%  *
:*            FIND /AUXINC3/                                          *
:*           %EDIT /DUMMY/DSN=HHLQ?APID.?ENVR.LIBMAST,DISP=SHR/%SEQ% *
:*--------------------------------------------------------------------*
              FIND /AUXINC2/
             %EDIT /DSN=HHLQ?APID.?ENVR.LIBMAST,DISP=SHR/DUMMY/%SEQ%
              EDIT /CLASS=J/CLASS=K/
          ENDIF
         %EDIT `?%VARS<PTR>%`%DESC<PTR>%`
        WHEN VARS<PTR> EQ 'UNAM'
          LET NMSG = NMSG + 1
          LET CARD = DESC<PTR>
        WHEN NONE
         %EDIT `?%VARS<PTR>%`%DESC<PTR>%`
      ENDSEL
  ENDLOOP
 %EDIT `?PSWD`%RETINFO<1>%`
 %EDIT `?LNAM`%RETINFO<4>%`
  EDIT /MEM='CMC/MEM='CMK/
  EDIT /PPTNAME='CMC/PPTNAME='CMK/
 %EDIT `?MEMB`%MEMBER%`
 %EDIT `?JPRO`%TRIM(SUBSTR(CARD|' '|MEMBER 1 20))%`
  POINT AWS LINE T
  FIND /-REP ALL/
  IF REPLACE EQ 'Y' AND ROSMEM NE '$$CANCEL' AND ROSMEM NE ''
      %COPY %ROSMEM% %SEQ%
      TRAP
     %FIND /*       LIB ASM /%SEQ% 999999
      IF TC EQ 0
          %READ AWS %SEQ% CARD
          LET RETINFO<2> = SUBSTR(CARD 26 15)
          LET RETINFO<3> = SUBSTR(CARD 42)
      ENDIF
  ELSE
      %DELETE %SEQ%
  ENDIF
  LOOP PTR FROM 1 TO NVAR BY 1
    UNTIL VARS<PTR> EQ 'ACBK'
  ENDLOOP
  IF DESC<PTR> EQ 'S'
      POINT
     %FIND /-ADD / 1 %HIGHSEQ%
      LOOP PTR FROM 1 TO NVAR BY 1
        UNTIL VARS<PTR> EQ 'APID'
      ENDLOOP
      IF DESC<PTR> EQ 'ACS'
          TRAP
         %EDIT /-ADD CMC/-ADD CMK/%SEQ%
          TRAP OFF
      ENDIF
      IF RETINFO<5> EQ 'DSECT'
          %EDIT /-ADD /-SEL /%SEQ%
          %EDIT /PSWD=//%SEQ%
      ENDIF
     %FIND /-REP ALL/%SEQ% %HIGHSEQ%
      IF RETINFO<5> EQ 'NODSECT'
          %DELETE %SEQ%
      ENDIF
      FIND /      * LIB COB /
     %READ AWS %SEQ% CARD
      LET CARD = MODIFY(PAD(CARD 72) RETINFO<4> 17)
      LET CARD = MODIFY(PAD(CARD 72) RETINFO<2> 26)
      LET CARD = MODIFY(PAD(CARD 72) RETINFO<3> 42)
     %%SEQ% %CARD%
  ENDIF
 %EDIT `?PGMR`%RETINFO<2>%`
 %EDIT `?DESC`%RETINFO<3>%`
  TRAP OFF
ENDPROC
<<GETPAN>> PROC
  LET MEMBER  = TRIM(TRIM(P.MEMBER '_'))
  LET REPLACE = TRIM(TRIM(P.REPLACE '_'))
  LET ROSMEM  = TRIM(TRIM(P.ROSMEM '_'))
  LOOP PTR FROM 1 TO NVAR BY 1
     %LET CARD = TRIM(TRIM(P.%VARS<PTR>% '_'))
      IF CARD NE DESC<PTR>
          LET DESC<PTR> = CARD
      ENDIF
  ENDLOOP
  LET CARD = ''
ENDPROC
<<PUTPAN>> PROC
  LET NMSG = 0
  LET P.MEMBER = PAD(MEMBER MAXLEN(P.MEMBER) '_')
  IF EMSG<1> NE ''
      LET NMSG = NMSG + 1
      LET P.MSG<NMSG> = EMSG<1>
      LET A.MEMBER = 'UHM'
      LET CURPOS = 'MEMBER'
  ENDIF
  LET P.REPLACE = PAD(REPLACE MAXLEN(P.REPLACE) '_')
  IF EMSG<2> NE ''
      LET NMSG = NMSG + 1
      LET P.MSG<NMSG> = EMSG<2>
      LET A.REPLACE = 'UHM'
      LET CURPOS = 'REPLACE'
  ENDIF
  IF REPLACE EQ 'Y'
      LET A.ROSLIT = 'SL'
      LET P.ROSMEM = PAD(ROSMEM MAXLEN(P.ROSMEM) '_')
      IF EMSG<3> NE ''
          LET NMSG = NMSG + 1
          LET P.MSG<NMSG> = EMSG<3>
          IF INDEX(EMSG<3> 'CANCELLED') GT 0
              LET A.ROSMEM = 'ULM'
          ELSE
              LET CURPOS = 'ROSMEM'
              LET A.ROSMEM = 'UHM'
          ENDIF
      ELSE
          LET A.ROSMEM = 'ULM'
      ENDIF
  ELSE
      LET A.ROSLIT = 'SI'
      LET A.ROSMEM = 'SIM'
  ENDIF
  LOOP PTR FROM 1 TO NVAR BY 1
     %LET P.%VARS<PTR>% = PAD(DESC<PTR> MAXLEN(P.%VARS<PTR>%) '_')
      IF MSGS<PTR> NE ''
          LET NMSG = NMSG + 1
          IF NMSG LT 4
              LET P.MSG<NMSG> = MSGS<PTR>
          ENDIF
          IF INDEX(MSGS<PTR> 'DEFAULT' 1) LE 0
             %LET A.%VARS<PTR>% = 'UHM'
              IF CURPOS EQ ''
                  LET CURPOS = VARS<PTR>
              ENDIF
          ENDIF
      ENDIF
  ENDLOOP
  IF NMSG EQ 0
      LET P.MSG<1> = 'PRESS "PF8" TO EDIT JCL IN YOUR AWS,'
      LET P.MSG<1> = P.MSG<1> | ' "PF9" TO SUBMIT THE JOB'
  ENDIF
  IF CURPOS EQ ''
      LET CURPOS = 'MEMBER'
  ENDIF
ENDPROC
<<EDITS>> PROC
  LET NMSG = 0
  LET EMSG<1> = EMSG<2> = EMSG<3> = ''
  LOOP PTR FROM 1 TO NVAR BY 1
    UNTIL VARS<PTR> EQ 'SRCE'
  ENDLOOP
  IF LENGTH(MEMBER) EQ 0
      LET EMSG<1> = 'A LIBRARIAN MEMBER NAME IS REQUIRED'
      LET NMSG = NMSG + 1
  ELSE
      IF MEMBER NE SAVE<1>
          IF LENGTH(DESC<PTR>) EQ 0
              EXEC PFX.CCDEFGET VARS<PTR>
              SELECT AWS ROS1
              LET DESC<PTR> = R1
          ENDIF
          EXEC PFX.CCMEMSEL MEMBER DESC<PTR>
          SELECT AWS ROS1
          IF R1 EQ ''
              LET EMSG<1> = 'SELECTED MEMBER NAME HAS NO MATCH'
              LET EMSG<1> = EMSG<1> | ' ON LIBRARIAN'
              LET NMSG = NMSG + 1
          ELSE
              LET MEMBER     = R1
              LET RETINFO<1> = R2
              LET RETINFO<2> = R3
              LET RETINFO<3> = R4
              LET RETINFO<4> = R5
              LET RETINFO<5> = R6
          ENDIF
      ENDIF
  ENDIF
  SELECT FIRST
    WHEN REPLACE EQ 'N'
      LET ROSMEM = ''
    WHEN REPLACE EQ 'Y'
      IF ROSMEM NE SAVE<3> OR ROSMEM EQ ''
          IF ROSMEM EQ ''
              LET ROSMEM = MEMBER
          ENDIF
          EXEC PFX.CCROSSEL ROSMEM
          SELECT AWS ROS1
          SELECT FIRST
            WHEN R1 EQ ''
              LET EMSG<3> = 'SELECTED ROSCOE MEMBER NAME HAS NO MATCH'
              LET EMSG<3> = EMSG<3> | ' IN YOUR ROSCOE LIBRARY'
              LET NMSG = NMSG + 1
            WHEN R1 EQ '$$CANCEL'
              LET EMSG<3> = 'LIBRARY MEMBER REPLACEMENT FROM ROSCOE'
              LET EMSG<3> = EMSG<3> | ' HAS BEEN CANCELLED'
              LET NMSG = NMSG + 1
              LET REPLACE = 'N'
              LET ROSMEM = ''
            WHEN NONE
              LET ROSMEM = R1
          ENDSEL
      ENDIF
    WHEN NONE
      LET EMSG<2> = '"REPLACE" MUST BE "Y"(YES) OR "N"(NO)'
      LET NMSG = NMSG + 1
  ENDSEL
  LOOP PTR FROM 1 TO NVAR BY 1
      IF LENGTH(DESC<PTR>) EQ 0
          EXEC PFX.CCDEFGET VARS<PTR>
          SELECT AWS ROS1
          LET DESC<PTR> = R1
      ENDIF
      LET MSGS<PTR> = ''
      SELECT FIRST
        WHEN VARS<PTR> EQ 'APID'
          IF LENGTH(DESC<PTR>) EQ 0
              LET MSGS<PTR> = 'APPLICATION ID IS MISSING'
          ENDIF
        WHEN VARS<PTR> EQ 'ACBK'
          IF DESC<PTR> NE 'C' AND DESC<PTR> NE 'S'
              LET MSGS<PTR> = 'COPYBOOK DESTINATION MUST BE "C" (COPY'
              LET MSGS<PTR> = MSGS<PTR> | 'LIB) OR "S" (SOURCE LIB)'
          ENDIF
        WHEN VARS<PTR> EQ 'JNAM'
          SELECT FIRST
:*--------------------------------------------------------------------*
:*          WHEN SUBSTR(DESC<PTR> 1 1) NE 'D'                         *
:*            LET MSGS<PTR> = 'JOB NAME STUB MUST BEGIN WITH'         *
:*            LET MSGS<PTR> = MSGS<PTR> | ' "D" FOR DEVELOPMENT'      *
:*--------------------------------------------------------------------*
            WHEN LENGTH(DESC<PTR>) LT 3
              LET MSGS<PTR> = 'JOB NAME MUST BE AT LEAST'
              LET MSGS<PTR> = MSGS<PTR> | ' 3 CHARACTERS LONG'
            WHEN NOT CONFORM(DESC<PTR> 'AN')
              LET MSGS<PTR> = 'CHARACTERS IN JOB NAME MUST'
              LET MSGS<PTR> = MSGS<PTR> | ' BE ALPHANUMERIC'
            WHEN NONE
              EXEC PFX.CCDEFGET 'JNAM'
              IF SUBSTR(DESC<PTR> 1 LENGTH(R1)) EQ R1
                  LET CARD = PAD(SAVE<1> 6)
                  LET CARD = SUBSTR(CARD LENGTH(R1)-1 8-LENGTH(R1))
                  LET CARD = TRIM(CARD)
                  SELECT FIRST
                    WHEN DESC<PTR> EQ R1
                    WHEN TRIM(SUBSTR(DESC<PTR> LENGTH(R1)+1)) EQ CARD
                    WHEN ANY
                      LET CARD = PAD(MEMBER 6)
                      LET CARD = SUBSTR(CARD LENGTH(R1)-1 8-LENGTH(R1))
                      LET DESC<PTR> = R1|CARD
                  ENDSEL
              ENDIF
          ENDSEL
        WHEN VARS<PTR> EQ 'ACCT'
          IF LENGTH(DESC<PTR>) NE 4
              LET MSGS<PTR> = 'ACCOUNT CODE MUST CONTAIN 4 CHARACTERS'
          ENDIF
      ENDSEL
      IF MSGS<PTR> NE ''
          LET NMSG = NMSG + 1
      ENDIF
  ENDLOOP
  IF EMSG<1> EQ ''
      LET SAVE<1> = MEMBER
  ENDIF
  IF EMSG<3> EQ ''
      LET SAVE<3> = ROSMEM
  ENDIF
ENDPROC
