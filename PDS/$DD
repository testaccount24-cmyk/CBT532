<<$DD>>  A1=A/B/C/D, A2=L/MEMNAME, A3=REP/SUB, A4=REP/SUB
  SET STMTCNT MAX
  PUSH
  EXEC PFX.CCSESSET
  DECLARE OPTION MEMBER REPLACE SUBMIT ERRS<4>
  LET REPLACE = 'N'
  LET SUBMIT = 'N'
  DECLARE NMSG PMSG PTR CURPOS FLD NLIST LIST REPL SUBM SHOWEX
  EXEC PFX.CCDEFSET 'NO DISPLAY IF OK'
  CREATE AWS CCLIST NONRECOVERABLE LEVEL
  LET NLIST = 0
  TRAP
  DELETE $$CCMSGS
  TRAP OFF
  LET PTR = 2
  SELECT FIRST
    WHEN A1 EQ '='
      LET LIST = A2
    WHEN A1 EQ 'L'
      LET LIST = A2
      LET MEMBER = 'L'
    WHEN LENGTH(A1) EQ 1
      LET OPTION = A1
      LET MEMBER = A2
      IF A2 EQ 'L'
          LET LIST = A3
          LET PTR = 3
      ENDIF
    WHEN NONE
      LET MEMBER = A1
      LET PTR = 1
  ENDSEL
  IF A<PTR+1> EQ 'REP' OR A<PTR+2> EQ 'REP'
      LET REPL = 'REP'
      LET REPLACE = 'Y'
  ENDIF
  IF A<PTR+1> EQ 'SUB' OR A<PTR+2> EQ 'SUB'
      LET SUBM = 'SUB'
      LET SUBMIT = 'Y'
  ENDIF
  IF A1 EQ '='
     %FETCH %LIST%
      RENUMBER 1 1
      UPDATE $$CCLIST
  ELSE
      LOOP
          DO <<EDITS>>
        UNTIL NMSG EQ 0
          PANEL ACTIVATE PFX.DDXXXPAN
          DO <<PANPUT>>
         %PANEL SEND CURSOR P.%CURPOS%
          IF AID EQ 'CLEAR'
              POP
              STOP
          ELSE
              DO <<PANGET>>
              SELECT FIRST
                WHEN AID EQ 'PF1'
                  EXEC PFX.CCHLPSHO 'CCXXX'
                  SELECT AWS CCLIST
                WHEN AID EQ 'PF2'
                  EXEC PFX.CCDEFSET
                  SELECT AWS CCLIST
              ENDSEL
          ENDIF
      ENDLOOP
      IF MEMBER EQ 'L'
         %EXEC PFX.$DD%OPTION%L LIST REPL SUBM
          SELECT AWS CCLIST
      ELSE
          DELETE
         %1 %PAD(MEMBER 9)%%OPTION%
          UPDATE $$CCLIST
      ENDIF
  ENDIF
  FETCH $$CCLIST
  LET NLIST = AWSCOUNT
  LOOP PTR FROM 1 TO NLIST BY 1
     %READ AWS %PTR% MEMBER
      LET OPTION = SUBSTR(MEMBER 10 1)
      LET MEMBER = TRIM(SUBSTR(MEMBER 1 8))
      SELECT AWS ROS1
     %EXEC PFX.$DD%OPTION% MEMBER REPL SUBM '%NLIST-PTR%'
    UNTIL PTR EQ NLIST
      SELECT AWS CCLIST
  ENDLOOP
  IF AID NE 'PF8'
      TRAP
      FIND $$CCMSGS
      TRAP OFF
      IF TC EQ 0
          DELETE
          COPY $$CCMSGS T
          DELETE $$CCMSGS
      ENDIF
  ENDIF
  IF AWSCOUNT GT 0
      ATTACH
  ENDIF
  POP
  RETURN
<<PANGET>> PROC
  LET OPTION  = TRIM(TRIM(P.OPTION '_'))
  LET MEMBER  = TRIM(TRIM(P.MEMBER '_'))
  LET REPLACE = TRIM(TRIM(P.REPLACE '_'))
  LET SUBMIT  = TRIM(TRIM(P.SUBMIT '_'))
ENDPROC
<<PANPUT>> PROC
  LET PMSG = 0
  LET CURPOS = ''
  LET P.OPTION  = PAD(OPTION MAXLEN(P.OPTION) '_')
  LET P.MEMBER  = PAD(MEMBER MAXLEN(P.MEMBER) '_')
  LET P.REPLACE = PAD(REPLACE MAXLEN(P.REPLACE) '_')
  LET P.SUBMIT  = PAD(SUBMIT MAXLEN(P.SUBMIT) '_')
::IF SHOWEX EQ '\'
:::::%LOOP PTR FROM 1 TO %HBOUND(P.XTRA)% BY 1
::::::::::LET A.XTRA<PTR> = 'S'
::::: ENDLOOP
::ENDIF
  LOOP PTR FROM 1 TO 4 BY 1
      IF ERRS<PTR> NE ''
          LET PMSG = PMSG + 1
          IF PMSG LT 4
             %LET P.MSG<%3-NMSG+PMSG%> = ERRS<PTR>
          ENDIF
          LET FLD = SUBSTR('OPTION MEMBER REPLACESUBMIT ' PTR*7-6 7)
          LET FLD = TRIM(FLD)
         %LET A.%FLD% = 'UHM'
          IF CURPOS EQ ''
              LET CURPOS = FLD
          ENDIF
          LET ERRS<PTR> = ''
      ENDIF
  ENDLOOP
ENDPROC
<<EDITS>> PROC
  LET NMSG = 0
::IF OPTION EQ '\'
::::::LET SHOWEX = '\'
::::::LET OPTION = ' '
::ENDIF
  IF OPTION EQ 'A'
  ELSE
  IF OPTION EQ 'B'
  ELSE
  IF OPTION EQ 'C'
  ELSE
  IF OPTION EQ 'D'
  ELSE
  IF OPTION EQ 'P' AND SHOWEX EQ '\'
  ELSE
  IF OPTION EQ 'T' AND SHOWEX EQ '\'
  ELSE
  IF OPTION EQ ''
      LET ERRS<1> = 'MAKE A SELECTION FROM THE MENU ABOVE'
      LET NMSG = NMSG + 1
  ELSE
      LET ERRS<1> = 'INVALID SELECTION - MUST BE ONE OF THOSE ABOVE'
      LET NMSG = NMSG + 1
  ENDIF
  ENDIF
  ENDIF
  ENDIF
  ENDIF
  ENDIF
  ENDIF
  IF MEMBER EQ ''
      LET ERRS<2> = 'ENTER THE NAME OF THE LIBRARY MEMBER TO BE'
      LET ERRS<2> = ERRS<2> | ' COMPILED, OR "L" TO PROCESS A LIST'
      LET NMSG = NMSG + 1
  ENDIF
  SELECT FIRST
    WHEN REPLACE EQ ''
      LET REPLACE = 'N'
      LET REPL = ''
    WHEN REPLACE EQ 'N'
      LET REPL = ''
    WHEN REPLACE EQ 'Y'
      LET REPL = 'REP'
    WHEN NONE
      LET ERRS<3> = 'REPLACE MUST BE "Y" OR "N" (YES OR NO)'
      LET NMSG = NMSG + 1
  ENDSEL
  SELECT FIRST
    WHEN SUBMIT EQ ''
      LET SUBMIT = 'N'
      LET SUBM = ''
    WHEN SUBMIT EQ 'N'
      LET SUBM = ''
    WHEN SUBMIT EQ 'Y'
      LET SUBM = 'SUB'
    WHEN NONE
      LET ERRS<3> = 'SUBMIT MUST BE "Y" OR "N" (YES OR NO)'
      LET NMSG = NMSG + 1
  ENDSEL
ENDPROC
