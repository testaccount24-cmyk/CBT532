*---------------------------------------------------------------------*
*     AB                    RPF ATTACH BOTTOM                         *
*---------------------------------------------------------------------*

AB is used to look at the bottom of the AWS.  Does not work correctly in
split screen mode, but gets you within one page forward of the bottom.

*---------------------------------------------------------------------*
*     ACC                   RPF ACC ACS COMPILE RPF                   *
*---------------------------------------------------------------------*

BACKGROUND

This RPF was written by Hugh Mealy and generates JCL to do compiles
and assemblies.  It can provide a standard way to do this resulting
in less maintenance when procedures, datasets, and compiler options
change. It is panel driven for ease of use.

This RPF is tailored to an environment where the source code is kept
in Librarian libraries and the DBMS is Datacomm/DB.

USING THE ACC RPF (HELP AVAILABLE FROM FIRST SCREEN VIA PF1)

The first time that you invoke ACC use PF2 to set up your defaults.

 This is the entry point screen for the ACC (Compiles) RPF. ACC enables
 a user to generate the JCL necessary to compile most programs commonly
 found at xxxxxxx, namely CICS assembler maps, CICS COBOL programs, and
 batch COBOL programs with and without DataCom.

 If you read this help screen carefully, you should have little trouble
 with the remaining screens and concepts.

 After entering ACC, fill in the fields found on this screen as follows:

 OPTION:  Enter "A" to assemble a CICS map
                "B" to compile a batch COBOL program
                "C" to compile a CICS COBOL program.
          Enter "\ "  to enable two additional options
                "P" to assemble a CICS ASSEMBLER
                "T" to assemble a CICS TABLE.

 MEMBER:  Enter the name of the member to be compiled, with or without
          the version number.  The version number will be automatically
          filled in when only one version exists on the source library.
          When more than one version exists, the user will be presented
          with a selection list.
          Entry of an "L" here invokes list processing in which ACC will
          compile/assemble all programs in a list.

 REPLACE: Entry of a "Y" here indicates to ACC that the user wishes to
          replace the selected Library member with the content of one
          of his Roscoe members.

 SUBMIT:  Entry of a "Y" here indicates to ACC that the JCL is to be
          submitted immediately, without showing any more screens, if
          there are no problems with the information entered.

 This screen can be bypassed entirely by making an entry on the Roscoe
 command line of the following form:
  ACC option member <REP> <SUB>    (<...> indicates an optional entry)
       where option is the entry for OPTION above (A, B, or C)
             member is the entry for MEMBER above
             REP sets the REPLACE option to "Y"       (REP and SUB are
             SUB sets the SUBMIT option to "Y"         interchangeable)

 Example: ACC C CPP185 REP SUB
     will submit CPP185vv for CICS COBOL compile, replacing the module
     on Librarian from a Roscoe member, submitting the job without
     presenting a screen if there are no problems.

INSTALLATION AND MAINTANENCE

This RPF is tailored to an environment where the source code is kept
in Librarian libraries and the DBMS is Datacomm/DB. To use it in your
environment you need to adapt it to use your JCL procedures etc.
As delivered it uses "PFX" as the Roscoe prefix of the Roscoe library
where the RPF members are located. You will need to change this
to the actual Roscoe prefix used.  The SCANACC RPF or the SCANROS RPF
can help you find all members containing the string "PFX.".

Also look for members where job names, job accounting information,
dataset names, etc. need to be changed.  Scanning for strings with
"HLQ.", "JOBNAME", "ACCTINFO", and "Your Company Name Here" should help.

Below is a hierarchy chart showing the relationships (what calls what)
between key components (those most often changed or which need to be
adapted to your environment). Member CCHLPSHO is called from many
places but I have shown it only once for simplicity.  Also CCHLPSHO
refers to some members that were never written. This does not cause
a problem but generates a "help is not available" message.

acc
  $cc
    ccsesset
    $$cclist
    ccxxxpan -> acc option panel
    $cca     -> assemble map (see below)
    $ccb     -> batch compile (see below)
    $ccc     -> CICS compile (see below)
    $ccp     -> assemble CICS program (see below)
    $cct     -> assemble CICS table (see below)
    ccdefset
      ccsesset
      $$chdefs -> default options
      ccdefpan -> options panel
      cchlpsho
        ccalxhlp -> missing
        ccaxxhlp
        ccblxhlp -> missing
        ccbxxhlp
        ccclxhlp -> missing
        cccxxhlp
        ccdefhlp
        ccmemhlp -> missing
        ccroshlp -> missing
        ccurthlp -> missing
        ccxxxhlp

Below is a hierarchy/structure chart for the five major options.  I
am presenting this information in several pieces to make it less
complex than a single chart.

$cca - assemble a map
  ccsesset
  ccaxxpan
  ccdefset
  ccdefget
  ccjobJCL
  ccacxJCL -> copy CICS symbolic map
  ccasxJCL -> -INC symbolic map
  ccmemsel
  ccrossel

$ccb - batch cobol compile
  ccsesset
  ccdefget
  ccurtsel
  ccbxxpan
  ccdefset
  ccjobJCL
  ccbdiJCL -> JCL proc batch Intertest with database
  ccbxiJCL -> JCL proc batch Intertest no database
  ccbdxJCL -> JCL proc batch with database
  ccbxxJCL -> JCL proc batch no database
  ccmemsel
  ccrossel

$ccc - CICS compile
  ccsesset
  cccxxpan
  ccdefget
  ccjobJCL
  cccxiJCL -> with Intertest
  cccxxJCL -> no Intertest
  ccmemsel
  ccrossel

$ccp - assemble CICS program
  ccpxxpan
  ccdefset
  ccdefget
  ccjobJCL
  ccpxxJCL -> JCL proc
  ccmemsel
  ccrossel

$cct - aassemble CICS table
  ccsesset
  cctxxpan
  ccdefset
  ccdefget
  ccjobJCL
  cctxxJCL -> JCL proc
  ccmemsel
  ccrossel

I hope this is enough to get you started.  If it is any consolation
I had to figure this all out on my own.  Some of the other RPFs in
this collection helped me to do this. This is the most complex RPF in
the collection.  Feel free to email me at home if you have any
questions: chottel@cpcug.org

ONE FINAL NOTE.

We decided to use ACC during our Y2K project because we had many new
contractors and Hugh Mealy had already written it for another division.
I simply adapted it for my own division. During the time of the Y2K
project we placed all Y2K compliant source code in a new Librarian
library which eventually became our new development library. Until
the Y2K conversion was completed we still had to use the original
Librarian library to make fixes to programs in production.  I developed
the PFIX RPF to provide a standardized way of doing this.  PFIX is
actually ACC with a different interface.  Once the Y2K project ended
the original Librarian source code library was no longer used so PFIX
and ACC now are basically the same.  I have included PFIX so that
you can see how to adapt ACC to another environment and for those users
that work in multiple environments. One example would be a situation
where there are both short term development libraries and long term
development libraries.

*---------------------------------------------------------------------*
*     ACCEXP                RPF ACC ACC EXPORT                        *
*---------------------------------------------------------------------*

Export the ACC members to a partition dataset.  Used to backup before
making any changes.  That way if your changes break the RPF you can
restore a working version.  Using this depends upon the extent of the
changes that you are making and your judgement and confidence in making
those changes.

*---------------------------------------------------------------------*
*     ACSDEST               DEST USED BY ACC RPF                      *
*---------------------------------------------------------------------*

Optional JES2 destination information to control job separator page
printed information.  This JCL is copied into the compile JCL.

*---------------------------------------------------------------------*
*     AF                    RPF ATTACH FILE                           *
*---------------------------------------------------------------------*

Use "AF n" to display file n of your already attached job.

AJ (Attach Job), DJ (Detach Job), SDJ (Set Display Job),
SJ (Status Job), AF (Attach File), NF (Next File),
PAF (Print All Files), and PF (Print File) all work together to
make viewing and manipulating job output easier.

*---------------------------------------------------------------------*
*     AJ                    RPF ATTACH JOB                            *
*---------------------------------------------------------------------*

Attach a job by job number or job name.

AJ (Attach Job), DJ (Detach Job), SDJ (Set Display Job),
SJ (Status Job), AF (Attach File), NF (Next File),
PAF (Print All Files), and PF (Print File) all work together to
make viewing and manipulating job output easier.

*---------------------------------------------------------------------*
*     AL                    RPF ATTACH LINKAGE                        *
*---------------------------------------------------------------------*

Display Cobol source in active work space starting at "LINKAGE SECTION".

*---------------------------------------------------------------------*
*     ALL                   RPF ALTERNATE LIBRARY LIST                *
*---------------------------------------------------------------------*

Get a list of Roscoe members in an alternate library into the active
work space using the prefix for that library: "ALL PFX".

*---------------------------------------------------------------------*
*     AP                    RPF ATTACH PROCEDURE DIVISION             *
*---------------------------------------------------------------------*

Display Cobol source in active work space starting at
"PROCEDURE DIVISION".

*---------------------------------------------------------------------*
*     ASMTAB                RPF SET TABS FOR ASSEMBLER PROGRAM        *
*---------------------------------------------------------------------*

Set up tab positions for an assembler program.

*---------------------------------------------------------------------*
*     AW                    RPF ATTACH WORKING                        *
*---------------------------------------------------------------------*

Display Cobol source in active work space starting at
"WORKING-STORAGE SECTION".


*---------------------------------------------------------------------*
*     BCOB2C                RPF BATCH COBOL2 COMPILE ONLY             *
*---------------------------------------------------------------------*

BCOB2C program-name

A simple batch Cobol compile only (i.e. no link).  This is an alternative
to one function of ACC.  Up side is it is much simpler than ACC.  Down
side is that you need one of these for each function of ACC and when
datasets or procedures change, all of them must be updated.  Of course
if each user uses this method then all of them must update all of their
RPFs with the needed change.  If everyone uses ACC then only ACC needs
to receive the required change.

This RPF illustrates a technique that I use to keep the RPF and it's
related data together.  I use line 1 to 99 for the RPF itself and all
other lines contain the data that it uses.  This way everything is kept
in one Roscoe member. Do NOT RENUMBER the member.  If you do you will
break it.

*---------------------------------------------------------------------*
*     BCOB2CL               RPF BATCH COBOL2 COMPILE AND LINK         *
*---------------------------------------------------------------------*

BCOB2CL program-name

A simple batch Cobol compile and link edit.  This is an alternative
to one function of ACC.  Up side is it is much simpler than ACC.  Down
side is that you need one of these for each function of ACC and when
datasets or procedures change, all of them must be updated.  Of course
if each user uses this method then all of them must update all of their
RPFs with the needed change.  If everyone uses ACC then only ACC needs
to receive the required change.

This RPF illustrates a technique that I use to keep the RPF and it's
related data together.  I use line 1 to 99 for the RPF itself and all
other lines contain the data that it uses.  This way everything is kept
in one Roscoe member. Do NOT RENUMBER the member.  If you do you will
break it.

*---------------------------------------------------------------------*
*     BCOB2ROS              RPF COB2 COMPILE FROM ROSCOE              *
*---------------------------------------------------------------------*

BCOB2ROS Roscoe-member-name

A simple batch Cobol compile from Roscoe instead of from Librarian.

This RPF illustrates a technique that I use to keep the RPF and it's
related data together.  I use line 1 to 99 for the RPF itself and all
other lines contain the data that it uses.  This way everything is kept
in one Roscoe member. Do NOT RENUMBER the member.  If you do you will
break it.

*---------------------------------------------------------------------*
*     BDAY                  RPF BIRTHDAYS                             *
*---------------------------------------------------------------------*
My signon RPF executes this  and it notifies me when any birthdays etc.
are going to occur within 10 days or less.  The list of birthdays etc.
are kept in PFX.BDAYS one per line: "mm/dd/yy name". It does not display
individual lines but instead if any one line falls within the 10 day
period then it displays the entire Roscoe member.

*---------------------------------------------------------------------*
*     BFILL16               RPF BLANK FILL COLS 1 - 6                 *
*---------------------------------------------------------------------*

Remove line number from columns 1 to 6 of a Cobol program that is in
the active work space.

*---------------------------------------------------------------------*
*     BLANKFIL              RPF BLANK FILL 73-255                     *
*---------------------------------------------------------------------*

Fill active work space columns 72 to 255 with spaces.  I use this to
remove Librarian line numbers.

*---------------------------------------------------------------------*
*     BLKTAPE               RPF BLOCK SIZE TAPE                       *
*---------------------------------------------------------------------*

Given a record size it suggests some legal block sizes. Useful before
advent of system determined block size feature.

*---------------------------------------------------------------------*
*     BLK3390               RPF BLOCK SIZE 3390                       *
*---------------------------------------------------------------------*

Given a record size it suggests some legal block sizes. Useful before
advent of system determined block size feature.

*---------------------------------------------------------------------*
*     BMI                   RPF BODY MASS INDEX                       *
*     BMI1                  RPF BODY MASS INDEX                       *
*---------------------------------------------------------------------*

Compute your body mass index. "BMI height weight".

There are 2 versions because each one is based upon a different
newspaper article with a slightly different formula.

*---------------------------------------------------------------------*
*     CALS                  RPF                                       *
*---------------------------------------------------------------------*

"CALS weight" will display the minimum number of calories needed to
maintain that weight (for a man).

*---------------------------------------------------------------------*
*     CICSCOB               RPF CICS COBOL2 COMPILE ONLY WITH INTERTEST
*---------------------------------------------------------------------*

CICSCOB program-name

A simple CICS Cobol compile with Intertest.

This RPF illustrates a technique that I use to keep the RPF and it's
related data together.  I use line 1 to 99 for the RPF itself and all
other lines contain the data that it uses.  This way everything is kept
in one Roscoe member. Do NOT RENUMBER the member.  If you do you will
break it.

*---------------------------------------------------------------------*
*     CICSCOBL              RPF CICS COBOL2 COMPILE LINK              *
*---------------------------------------------------------------------*

CICSCOBL program-name

A simple CICS Cobol compile and link edit with Intertest.

This RPF illustrates a technique that I use to keep the RPF and it's
related data together.  I use line 1 to 99 for the RPF itself and all
other lines contain the data that it uses.  This way everything is kept
in one Roscoe member. Do NOT RENUMBER the member.  If you do you will
break it.

*---------------------------------------------------------------------*
*     CICSCOMP              RPF CICS COMPILE AND LINK                 *
*---------------------------------------------------------------------*

CICSCOMP program-name

A simple CICS Cobol compile and link edit with Intertest. With this
JCL setup you do NOT need to move your copy members to the long term
development environment.

This RPF illustrates a technique that I use to keep the RPF and it's
related data together.  I use line 1 to 99 for the RPF itself and all
other lines contain the data that it uses.  This way everything is kept
in one Roscoe member. Do NOT RENUMBER the member.  If you do you will
break it.

*---------------------------------------------------------------------*
*     CICSMAP               RPF ASSEMBLE CICS MAP                     *
*---------------------------------------------------------------------*

CICSMAP map-name

A simple assembly of a CICS map.

This RPF illustrates a technique that I use to keep the RPF and it's
related data together.  I use line 1 to 99 for the RPF itself and all
other lines contain the data that it uses.  This way everything is kept
in one Roscoe member. Do NOT RENUMBER the member.  If you do you will
break it.

*---------------------------------------------------------------------*
*     CLEANROS              RPF DELETE MISCELLANEOUS FILES            *
*---------------------------------------------------------------------*

Deletes some commonly created temporary files.  My signon RPF sets up
the PA2 key to run this RPF and then signoff.

*---------------------------------------------------------------------*
*     DATE                  RPF JULIAN DATE FROM GREGORIAN            *
*---------------------------------------------------------------------*

DATE 'MM/DD/YY' will display the corresponding Julian date.

*---------------------------------------------------------------------*
*     DCOB2C                RPF DB COBOL2 COMPILE                     *
*---------------------------------------------------------------------*

DCOB2C program-name

A Cobol compile with Datacom/DB.

This RPF illustrates a technique that I use to keep the RPF and it's
related data together.  I use line 1 to 99 for the RPF itself and all
other lines contain the data that it uses.  This way everything is kept
in one Roscoe member. Do NOT RENUMBER the member.  If you do you will
break it.

*---------------------------------------------------------------------*
*     DCOB2CL               RPF DB COBOL2 COMPILE LINK                *
*---------------------------------------------------------------------*

DCOB2CL program-name

A Cobol compile with Datacom/DB.

This RPF illustrates a technique that I use to keep the RPF and it's
related data together.  I use line 1 to 99 for the RPF itself and all
other lines contain the data that it uses.  This way everything is kept
in one Roscoe member. Do NOT RENUMBER the member.  If you do you will
break it.

*---------------------------------------------------------------------*
*     DD                    RPF DETACH DSN                            *
*---------------------------------------------------------------------*

DETACH DSN to exit DSN mode.

*---------------------------------------------------------------------*
*     DDD                   RPF DELETE NO VERIFICATION                *
*---------------------------------------------------------------------*

Delete a Roscoe member without any request for confirmation.

*---------------------------------------------------------------------*
*     DECTOHEX              RPF DECIMAL TO HEXADECIMAL                *
*---------------------------------------------------------------------*

DECTOHEX decimal-number

Display hexadecimal equivalent to decimal number.

*---------------------------------------------------------------------*
*     DEDUP                 RPF DEDUP AWS                             *
*---------------------------------------------------------------------*

DEDUP start-column end-column

Remove duplicate lines from the active work space.

*---------------------------------------------------------------------*
*     DELDUPS               RPF ACC DELETE DUPLICATES                 *
*---------------------------------------------------------------------*

DELDUPS start-column length

Remove duplicate lines from the active work space.

*---------------------------------------------------------------------*
*     DIR                   RPF DIRECTORY LIST                        *
*---------------------------------------------------------------------*

DIR with no parameter simply displays your directory.

"DIR >" places the directory list into your active work space.  This
provides a way to obtain member names for searching.


*---------------------------------------------------------------------*
*     DJ                    RPF DETACH JOB                            *
*---------------------------------------------------------------------*

DETACH JOB (the job output goes away).

AJ (Attach Job), DJ (Detach Job), SDJ (Set Display Job),
SJ (Status Job), AF (Attach File), NF (Next File),
PAF (Print All Files), and PF (Print File) all work together to
make viewing and manipulating job output easier.

*---------------------------------------------------------------------*
*     DJN                   RPF DETACH JOB NOACT                      *
*---------------------------------------------------------------------*

DETACH JOB NOACT (the job remains in the output queue).

*---------------------------------------------------------------------*
*     DL                    RPF DETACH LIBRARY                        *
*---------------------------------------------------------------------*

DETACH LIBRARY

*---------------------------------------------------------------------*
*     DOCC                  RPF MARK COBOL 1-6                        *
*---------------------------------------------------------------------*

DOCC Version-number Begin-line-number End-line-number

I use this to mark the lines of a Cobol program when I make changes to
them or to mark new lines that I have inserted.  I place a modification
log at the beginning of the program that documents the changes that are
being made. The mark consists of the first letter of my last name and a
two digit version number. For example "DOCC 06 1000 1010" places "H06"
in columns 1 to 3 of lines 1000 through 10010.

*---------------------------------------------------------------------*
*     ECHO                  RPF ECHO KEY TYPED                        *
*---------------------------------------------------------------------*

Used mainly to see how PF keys are being interpreted.
Enter "STOP" to exit the RPF.

*---------------------------------------------------------------------*
*     EXGET                 RPF                                       *
*---------------------------------------------------------------------*

Import a Librarian member from long term development.  Used by GETLNG
RPF.

*---------------------------------------------------------------------*
*     FINDPGM               RPF                                       *
*---------------------------------------------------------------------*

Search multiple Librarian libraries for a program or for all programs
that begin with a string of characters.  You enter the program name
or partial name on a panel that is displayed.

*---------------------------------------------------------------------*
*     FS                    RPF DIS AWS ON SCREEN                     *
*---------------------------------------------------------------------*

Full screen display of active work space. "Enter" will scroll forward.
"Clear" will exit. "PA1" starts display from previous page.

*---------------------------------------------------------------------*
*     FS1                   RPF DIS AWS ON SCREEN                     *
*---------------------------------------------------------------------*

Full screen display of active work space. "Enter" will scroll forward.
"Clear" will exit.

*---------------------------------------------------------------------*
*     GENDATA               RPF GENERATE DATA                         *
*---------------------------------------------------------------------*

An example of using an RPF to generate data in the active work space.

*---------------------------------------------------------------------*
*     GETJCL                RPF GET JCL FROM A LIBRARY                *
*---------------------------------------------------------------------*

Import a member from a partioned data set containing JCL.

*---------------------------------------------------------------------*
*     GETLNG                RPF GET LONGTERM PGM                      *
*---------------------------------------------------------------------*

Import a Librarian member from long term development.

*---------------------------------------------------------------------*
*     GETY2K                RPF GET Y2K PGM                           *
*---------------------------------------------------------------------*

Import a Librarian member from one of the Y2K libraries.

*---------------------------------------------------------------------*
*     HEXTODEC              RPF HEXADECIMAL TO DECIMAL                *
*---------------------------------------------------------------------*

HEXTODEC hexadecimal-number

Display decimal equivalent to hexadecimal number.

*---------------------------------------------------------------------*
*     IMPEXAML              RPF IMPORT EXAMPLE                        *
*---------------------------------------------------------------------*

This is an example of an IMPORT with the INCLUDE option.  For example
if you have a file with several different record types and if each type
is identified by a character in the first position, you can import the
records of just one type at a time.

*---------------------------------------------------------------------*
*     KEEPALL               RPF KEEP ALL ROSCOE MEMBERS               *
*---------------------------------------------------------------------*

This RPF builds another RPF that updates the "last update date" of
all of your Roscoe members so that they are not archived. Since a
running RPF cannot be updated the KEEPALL RPF excludes itself and you
must do a "FETCH KEEPALL" followed by an "UPDATE *" to manually
prevent it from being archived.

I would strongly suggest study of this RPF because the techniques used
are very useful.  Once you have the names of the members that you wish
to process ( e.g. update or search ) and a pattern (the series of Roscoe
commands that constitute the process) then these techniques allow you to
quickly build an RPF to perfrom the process on all of the members.

*---------------------------------------------------------------------*
*     LIBLOOK               RPF LIBRARIAN LOOK                        *
*---------------------------------------------------------------------*

Search multiple Librarian libraries for a program or for all programs
that begin with a string of characters.  You enter the program name
or partial name on a panel that is displayed.

*---------------------------------------------------------------------*
*     LOUP                  RPF LOWERCASE TO UPPERCASE                *
*---------------------------------------------------------------------*

"LOUP Start-line-number  End-line-number" converts lines in active work
space from uppercase letters to lowercase letters.

*---------------------------------------------------------------------*
*     LS                    RPF ROSCOE LIBRARY SEARCH                 *
*---------------------------------------------------------------------*

LS with no parameters will display a list of your Roscoe members
in share (SHR) status.  This is most useful when only the members that
you are currently working on are in share status.

"LS string" will display a list of your Rocoe members which contain
the string in thier name, description, related dates or access status.
For example "LS .t" displays all members that start with the letter
"t".  "LS print" displays all members with "print" in either their name
or description.

*---------------------------------------------------------------------*
*     MHR                   RPF MAXIMUM HEART RANGE                   *
*     MHR1                  RPF MAXIMUM HEART RANGE                   *
*---------------------------------------------------------------------*

"MHR age" displays information on heart ranges for exercise. MHR1
performs a slighly different calculation.

*---------------------------------------------------------------------*
*     MIXCASE               RPF MIXED UPPER LOWER CASE                *
*---------------------------------------------------------------------*

Does a "SET MODE XTENDED" to allow you to enter uppercase and/or
lowercase letters into the active work space.

*---------------------------------------------------------------------*
*     MSG                   RPF SEND MESSAGE                          *
*---------------------------------------------------------------------*

"MSG Pfx 'text of message'" send a short message to thr Roscoe user
whose prefix id is 'Pfx'.

*---------------------------------------------------------------------*
*     MYDSN                 RPF DSN FOR USERID                        *
*---------------------------------------------------------------------*

Display all datasets whose high level qualifier is "USERID".  The
"USERID" is hardcoded into the RPF.

*---------------------------------------------------------------------*
*     NAMEIT                RPF UPDATE MEMBER WITH NAME               *
*---------------------------------------------------------------------*

"NAMEIT Pfx.Member" fetches the member into the active work space and
adds three lines to the top that contain the "Pfx.Member" name.

*---------------------------------------------------------------------*
*     NF                    RPF NEXT FILE                             *
*---------------------------------------------------------------------*

When viewing attached job output, NF, causes the next file to be
displayed.

AJ (Attach Job), DJ (Detach Job), SDJ (Set Display Job),
SJ (Status Job), AF (Attach File), NF (Next File),
PAF (Print All Files), and PF (Print File) all work together to
make viewing and manipulating job output easier.

*---------------------------------------------------------------------*
*     NOROSCOM              RPF NO ROSCOE COMMENT                     *
*---------------------------------------------------------------------*

Place a list of all Roscoe members that do not have a descriptive
comment into the active work space.

*---------------------------------------------------------------------*
*     NOSEQALL              RPF NOSEQ ALL MEMBERS                     *
*---------------------------------------------------------------------*

Make all Roscoe members have NOSEQ attribute.

*---------------------------------------------------------------------*
*     N1R6                  RPF ROUTE PRINT TO N1R6                   *
*---------------------------------------------------------------------*

Route all files of an attached job to destination N1R6 in class A.

*---------------------------------------------------------------------*
*     PAF                   RPF PRINT ALL FILES                       *
*---------------------------------------------------------------------*

"PAF Class" sends all job output to 'Class'.  Usually one class, A, is
for regular output and another class, Z, is for laser printer output.
You probably will need to change the destination.

AJ (Attach Job), DJ (Detach Job), SDJ (Set Display Job),
SJ (Status Job), AF (Attach File), NF (Next File),
PAF (Print All Files), and PF (Print File) all work together to
make viewing and manipulating job output easier.

*---------------------------------------------------------------------*
*     PAFL                  RPF PRINT ALL FILES LOCAL                 *
*---------------------------------------------------------------------*

Same as PAF except the destination is 'LOCAL'.

*---------------------------------------------------------------------*
*     PARA                  RPF DISPLAY PGM PARAGRAPHS                *
*---------------------------------------------------------------------*

If you have a Cobol program in your active work space and if you have
coded all of your paragraph names in the format: 'nnnn-paragraph-name'
starting in column 8 (i.e. with a dash in column 12) then PARA will
delete all lines except those with paragraph names.

You could save the result, retaining the original line numbers in a
Roscoe member, say named 'T1'. You could repeat this process doing a
DELETEX on /PERFORM/, /GOTO/, /CALL/, /LINK/, /XCTL/, etc. each time
saving the results with the original line numbers. Then with a
"MERGE T1 T2 T3 T4 T5 T6" you would quickly assemble all the data you
need to create a structure chart of what calls what.

*---------------------------------------------------------------------*
*     PF                    RPF PRINT FILE                            *
*---------------------------------------------------------------------*

"PF File-Number Class" will change the status of a file in an attached
job so that when you "DJ" (detach job) it will be sent to print in
'Class'.  For example "PF 8 Z" sets file 8 to print in job class Z.

AJ (Attach Job), DJ (Detach Job), SDJ (Set Display Job),
SJ (Status Job), AF (Attach File), NF (Next File),
PAF (Print All Files), and PF (Print File) all work together to
make viewing and manipulating job output easier.

*---------------------------------------------------------------------*
*     PFIX                  RPF PFIX (PRODUCTION FIX)                 *
*---------------------------------------------------------------------*

INTRODUCTION.

See the documentation for RPF, ACC.  PFIX now transfers to $CC
and works the same as ACC.  Prior to the completion of Y2K PFIX
transfered to $DD which offered four options:

    A - Y2K BATCH COMPILE
    B - Y2K CICS COMPILE
    C - NON-Y2K BATCH COMPILE
    D - NON-Y2K CICS COMPILE

PFIX is included to show how to develop an alternate interface for ACC
and it also highlights the essential RPF members that must be changed.
PFIX originally transfered to $DD but was changed to transfer to $CC
to make it work the same as ACC.

Below is a hierarchy chart showing the relationships (what calls what)
between key components (those most often changed or which need to be
adapted to your environment). Member CCHLPSHO is called from many
places but I have shown it only once for simplicity.  Also CCHLPSHO
refers to some members that were never written. This does not cause
a problem but generates a "help is not available" message.

This chart shows $DD but the current PFIX uses $CC.  See documentation
for ACC to see hierarchy under $CC. An asterisk marks the members that
are new in PFIX (i.e. not in ACC).  The "*" is not part of the member
name.

*pfix
  *$dd
    ccsesset
    $$cclist
   *ddxxxpan -> acc option panel
   *$dda     -> batch compile from y2k
   *$ddb     -> CICS compile from y2k
   *$ddc     -> batch compile from non-y2k
   *$ddd     -> CICS compile from non-y2k
    ccdefset
      ccsesset
      $$chdefs -> default options
      ccdefpan -> options panel
      cchlpsho
        ccalxhlp -> missing
        ccaxxhlp
        ccblxhlp -> missing
        ccbxxhlp
        ccclxhlp -> missing
        cccxxhlp
        ccdefhlp
        ccmemhlp -> missing
        ccroshlp -> missing
        ccurthlp -> missing
        ccxxxhlp

Below is a hierarchy/structure chart for the four major options.  I
am presenting this information in several pieces to make it less
complex than a single chart.

*$dda - batch cobol compile from y2k
  ccsesset
  ccdefget
  ccurtsel
  ccbxxpan
  ccdefset
  ccjobJCL
 *ddadiJCL -> JCL proc batch Intertest with database
 *ddaxiJCL -> JCL proc batch Intertest no database
 *ddadxJCL -> JCL proc batch with database
 *ddaxxJCL -> JCL proc batch no database
  ccmemsel
  ccrossel

*$ddb - CICS compile from y2k
  ccsesset
  cccxxpan
  ccdefget
  ccjobJCL
 *ddbxiJCL -> with Intertest
 *ddbxxJCL -> no Intertest
  ccmemsel
  ccrossel

*$ddc - batch cobocl compile from non-y2k
  ccsesset
  ccdefget
  ccurtsel
  ccbxxpan
  ccdefset
  ccjobJCL
 *ddcdiJCL -> JCL proc batch Intertest with database
 *ddcxiJCL -> JCL proc batch Intertest no database
 *ddcdxJCL -> JCL proc batch with database
 *ddcxxJCL -> JCL proc batch no database
  ccmemsel
  ccrossel

*$ddd - CICS compile from non-y2k
  ccsesset
  cccxxpan
  ccdefget
  ccjobJCL
 *dddxiJCL -> with Intertest
 *dddxxJCL -> no Intertest
  ccmemsel
  ccrossel

*---------------------------------------------------------------------*
*     PH                    RPF TELEPHONE NUMBERS                     *
*---------------------------------------------------------------------*

"PH Name" chains several Roscoe members containing telephone numbers
into the active work space and seaches for 'Name' and displays any
lines that match.

*---------------------------------------------------------------------*
*     PJCL                  RPF IMP PROD JCL MEMBER                   *
*---------------------------------------------------------------------*

Import a member from the production JCL library.

*---------------------------------------------------------------------*
*     PRINTIT               RPF PRINT AWS                             *
*---------------------------------------------------------------------*

Copy JCL to top of active work space and submit job to print it.  Data
in active work space must be 80 character or less in length, otherwise
it will be truncated.  For longer data create a file, export your data
to it, and use another utility program (e.g. IDCAMS) to print it.

*---------------------------------------------------------------------*
*     PRINTIT1              RPF PRINT AWS                             *
*---------------------------------------------------------------------*

Similiar to PRINTIT but does not destroy the contents of the current
active work space.

*---------------------------------------------------------------------*
*     PROCLOOK              RPF PROCLIB LOOK                          *
*---------------------------------------------------------------------*

Search several JCL libraries for a member name or a partial member
name. You need to change the JCL library names.  A screen is displayed
to allow you to enter the member name that you are searching for.

*---------------------------------------------------------------------*
*     PROSMEM               RPF PRINT ROSCOE MEMBER                   *
*---------------------------------------------------------------------*

"PROSMEM 'Member' 'Description'" can be used to collect Roscoe
members with their names and descriptions in a member named @TEMP,
which can then be printed or exported for backup. These days it is
more useful for collecting members for printing as there are better
ways to backup, but in the very early days of Roscoe their was no
backup and I used this to carry my Roscoe RPFs on paper to a new job.
You can use the DIR RPF and DELETEX commands to obtain the list of
member names and descriptions.

*---------------------------------------------------------------------*
*     PUTJCL                RPF EXPORT JCL TO USER PROCLIB            *
*---------------------------------------------------------------------*

Export JCL from active work space to user procedure library.  The
library name is hardcode in the RPF.  A screen is displayed to allow
you to enter the member name that you want the JCL saved under.

*---------------------------------------------------------------------*
*     QP                    RPF QUERY PRINT QUEUE                     *
*---------------------------------------------------------------------*

Query number of jobs and status of print queue.

*---------------------------------------------------------------------*
*     RESET                 RPF ACC RESET ROSCOE OPTIONS              *
*---------------------------------------------------------------------*

Reset some Roscoe options to the way you normally want them to be.

*---------------------------------------------------------------------*
*     ROSREST               RPF ROSCOE RESTORE                        *
*---------------------------------------------------------------------*

Restore Roscoe members from backup.  You will need to change the
dataset names for your environment.

*---------------------------------------------------------------------*
*     SCANACC               RPF SCAN ACC MEMBERS                      *
*---------------------------------------------------------------------*

Scan the members of the ACC RPF for a string.  This RPF uses the
SCANRMEM (Scan Roscoe Member) RPF which places it's results in the
@TEMP member.  You should check to see if the @TEMP member exists
before you run this RPF.  You may need to manually delete @TEMP or
rename it. The @TEMP member is never automatically deleted by any of
my RPFs because I want complete control and do NOT want to lose the
results of a search.  Scans of large partition data sets or large
Librarian libraries may take a long time and you do NOT want to have to
repeat them unnecessarily.

"SCANACC JOBNAME" will find all members of ACC that contain the string
'JOBNAME'.

*---------------------------------------------------------------------*
*     SCANLIB               RPF MAKE SCAN LIBRARIAN RANGE             *
*---------------------------------------------------------------------*

"SCANLIB 'LibrarianDatasetName' String RpfName Range" builds an
RPF named 'Rpfname' that searches for 'String' in Librarian library
members whose name begins with 'Range'.  The results are placed in the
@TEMP member.  You should check to see if the @TEMP member exists
before you run this RPF.  You may need to manually delete @TEMP or
rename it. The @TEMP member is never automatically deleted by any of
my RPFs because I want complete control and do NOT want to lose the
results of a search.  Scans of large partition data sets or large
Librarian libraries may take a long time and you do NOT want to have to
repeat them unnecessarily.

This RPF uses the SCANLMEM RPF.

"SCANLIB 'DVL.LIBMAST' '-INC' MIST CPPX" creates an RPF named 'MIST'
which you can execute to find all members of 'DVL.LIBMAST' whose names
start with 'CPPX' and contain the string '-INC'.

*---------------------------------------------------------------------*
*     SCANLMEM              RPF SCAN LIBRARIAN MEMBER                 *
*---------------------------------------------------------------------*

Used by SCANLIB to search one Librarian member for a string and place
the results in @TEMP.

*---------------------------------------------------------------------*
*     SCANMEM               RPF SCAN PDS MEMBER FOR STRING            *
*---------------------------------------------------------------------*

Used by SCANPDS to search one partitioned dataset member for a
string and place the results in @TEMP.

*---------------------------------------------------------------------*
*     SCANPDS               RPF MAKE SCAN PDS FOR STRING              *
*---------------------------------------------------------------------*

"SCANPDS 'PDSDatasetName' String RpfName" builds an RPF
named 'Rpfname' that searches for 'String' in a PDS library.
The results are placed in the @TEMP member.  You should check to
see if the @TEMP member exists before you run this RPF.  You may
need to manually delete @TEMP or rename it. The @TEMP member is never
automatically deleted by any of my RPFs because I want complete
control and do NOT want to lose the results of a search.  Scans of large
PDS libraries may take a long time and you do NOT want to have to
repeat them unnecessarily.

This RPF uses the SCANMEM RPF.

"SCANPDS 'SYS1.MACLIB' SVC MIST" creates an RPF named 'MIST'
which you can execute to find all members of 'SYS1.MACLIB'
which contain the string 'SVC'.

One limitation is that the PDS member may be larger that the maximum
size active work space. I have only had this happen with some members
in SYS1.MACLIB.

*---------------------------------------------------------------------*
*     SCANPFIX              RPF SCAN PFIX                             *
*---------------------------------------------------------------------*

Scan the members of the PFIX RPF for a string.  This RPF uses the
SCANRMEM (Scan Roscoe Member) RPF which places it's results in the
@TEMP member.  You should check to see if the @TEMP member exists
before you run this RPF.  You may need to manually delete @TEMP or
rename it. The @TEMP member is never automatically deleted by any of
my RPFs because I want complete control and do NOT want to lose the
results of a search.  Scans of large partition data sets or large
Librarian libraries may take a long time and you do NOT want to have to
repeat them unnecessarily.

"SCANPFIX JOBNAME" will find all members of PFIX that contain the
string 'JOBNAME'.

*---------------------------------------------------------------------*
*     SCANRMEM              RPF SCAN ROSCOE MEM                       *
*---------------------------------------------------------------------*

Used by SCANROS to search one Roscoe member for a
string and place the results in @TEMP.

*---------------------------------------------------------------------*
*     SCANROS               RPF MAKE SCAN ROS FOR STRING              *
*---------------------------------------------------------------------*

"SCANROS 'RoscoePrefix' String RpfName" builds an RPF
named 'Rpfname' that searches for 'String' in a Roscoe library.
The results are placed in the @TEMP member.  You should check to
see if the @TEMP member exists before you run this RPF.  You may
need to manually delete @TEMP or rename it. The @TEMP member is never
automatically deleted by any of my RPFs because I want complete
control and do NOT want to lose the results of a search.  Scans of large
PDS libraries may take a long time and you do NOT want to have to
repeat them unnecessarily.

This RPF uses the SCARMEM RPF.

"SCANPDS 'R$' JOB MIST" creates an RPF named 'MIST'
which you can execute to find all members of the 'R$' Roscoe library
which contain the string 'JOB'.

*---------------------------------------------------------------------*
*     SD                    RPF SET DISPLAY COLUMNS                   *
*---------------------------------------------------------------------*

"SD StartColumn EndColumn" sets which columns are displayed.
"SD 40 133" will start displaying at column 40 and will display up to
the maximum amount that the screen can display i.e. you do NOT have to
worry about counting columns.

*---------------------------------------------------------------------*
*     SDJ                   RPF SET DISPLAY COLUMNS JOB               *
*---------------------------------------------------------------------*

"SDJ StartColumn EndColumn" sets which columns are displayed.
"SDJ 40 133" will start displaying at column 40 and will display up to
the maximum amount that the screen can display i.e. you do NOT have to
worry about counting columns.

AJ (Attach Job), DJ (Detach Job), SDJ (Set Display Job),
SJ (Status Job), AF (Attach File), NF (Next File),
PAF (Print All Files), and PF (Print File) all work together to
make viewing and manipulating job output easier.

*---------------------------------------------------------------------*
*     SHAREACC              RPF ACC                                   *
*---------------------------------------------------------------------*

Set some members of the ACC RPF to execute only.

*---------------------------------------------------------------------*
*     SHAREALL              RPF                                       *
*---------------------------------------------------------------------*

Set all members of Roscoe library 'PFX' to share mode, but use
SHAREACC to keep some members of ACC in execute only mode.

*---------------------------------------------------------------------*
*     SIGNON                RPF SIGNON                                *
*---------------------------------------------------------------------*

This RPF is executed when you logon to Roscoe and is used to
customize the Roscoe environment, including setting up program
function keys, tabs, etc.  It uses the BDAY RPF to notify me of
upcoming birthdays etc.  It uses TSOCHK, TSODAT, AND TSOSAVE to
check if it is necessary to submit a job to stop certain datasets
from being migrated from disk storage to tape.

*---------------------------------------------------------------------*
*     SJ                    RPF STATUS JOB                            *
*---------------------------------------------------------------------*

Show the status of the files of an attached job.

AJ (Attach Job), DJ (Detach Job), SDJ (Set Display Job),
SJ (Status Job), AF (Attach File), NF (Next File),
PAF (Print All Files), and PF (Print File) all work together to
make viewing and manipulating job output easier.

*---------------------------------------------------------------------*
*     TEMP80                RPF EXP/IMP TO/FROM TEMP80                *
*---------------------------------------------------------------------*
"TEMP80 EXP" exports the active work space to dataset HLQ.TEMP80 and
"TEMP80 IMP" imports dataset HLQ.TEMP80 into the active work space.
I use this dataset frequently for uploading and downloading from/to
a personal computer.

*---------------------------------------------------------------------*
*     TSOCHK                RPF RUN TSOSAVE ONCE PER DAY              *
*---------------------------------------------------------------------*

If TSODAT contains today's date then do nothing, otherwise submit
job TSOSAVE to stop datatset migration and run the TSODATE RPF to
set TSODAT to today's date.

*---------------------------------------------------------------------*
*     TSODATE               RPF SAVE TODAY DATE IN TSODAT             *
*---------------------------------------------------------------------*

 Used by TSOCHK to set TSODAT to today's date.

*---------------------------------------------------------------------*
*     TSOSAVE               JCL JOB PREVENT MIGRATE TSO DATASETS      *
*---------------------------------------------------------------------*

Job submitted by TSOCHK to prevent dataset migration from disk to tape.

*---------------------------------------------------------------------*
*     UPLO                  RPF UPPERCASE TO LOWERCASE                *
*---------------------------------------------------------------------*

"UPLO Start-line-number  End-line-number" converts lines in active work
space from lowercase letters to uppercase letters.

*---------------------------------------------------------------------*
*     UPPERCAS              RPF UPPER CASE                            *
*---------------------------------------------------------------------*

Does a "SET MODE BASIC" to make all the characters that you enter
uppercase (see MIXCASE).

*---------------------------------------------------------------------*
*     VALIDPFX              RPF GENERATE VALID ROS PREFIX & USERIDS   *
*---------------------------------------------------------------------*

Creates a list of valid Roscoe prefixes and user ids in the active
work space.

*---------------------------------------------------------------------*
*     X                     RPF FETCH AND ATTACH                      *
*---------------------------------------------------------------------*

"X RoscoeMember" does a FETCH and ATTACH of the Roscoe member.

*---------------------------------------------------------------------*
*     XREF                  RPF FIND LINK AND XCTL                    *
*---------------------------------------------------------------------*

Import a CICS program from a Librarian library and search for
CICS LINK and CICS XCTL. Leaves result in active work space.

*---------------------------------------------------------------------*
*     XREFFPF               RPF CROSS REF FPF PGMS                    *
*---------------------------------------------------------------------*

Uses XREF RPF on multiple programs.

*---------------------------------------------------------------------*
*     Y2KCODE               RPF Y2K COBOL GENERATOR                   *
*---------------------------------------------------------------------*

Y2KCODE is a panel driven RPF that generates Cobol code which packs
and unpacks dates. A three letter code is used to designate the
Datacom/DB table name.  Four date formats are supported: YYMMDD,
YYMM, YY, YYDDD.  See Y2KFLDS for the WORKING-STORAGE field
definitions that are used.  See PACKZZZ and UNPKZZZ for examples
of the generated code.

*---------------------------------------------------------------------*
* APPENDIX: LIST OF MEMBERS
*---------------------------------------------------------------------*

$$CBTDOC
$$CCHELP
$$CHDEFS
$$CHHELP
$$JCARDS
$$JCNVRT
$$JSETUP
$CC
$CCA
$CCAL
$CCB
$CCBL
$CCC
$CCCL
$CCP
$CCT
$CCXL
$DD
$DDA
$DDB
$DDC
$DDD
AB
ACC
ACCEXP
ACSDEST
AF
AJ
AL
ALL
AP
AW
BCOB2C
BCOB2CL
BCOB2ROS
BDAY
BFILL16
BLANKFIL
BLKTAPE
BLK3390
BMI
BMI1
CALS
CBL2USER
CC
CCA
CCACXJCL
CCAL
CCALXPAN
CCASXJCL
CCAXXHLP
CCAXXPAN
CCB
CCBDIJCL
CCBDXJCL
CCBL
CCBLXPAN
CCBXIJCL
CCBXXHLP
CCBXXJCL
CCBXXPAN
CCC
CCCL
CCCLXPAN
CCCXIJCL
CCCXXHLP
CCCXXJCL
CCCXXPAN
CCDEFGET
CCDEFHLP
CCDEFPAN
CCDEFSET
CCHLPPAN
CCHLPSHO
CCJOBBLD
CCJOBJCL
CCLIBMEM
CCMEMPAN
CCMEMSEL
CCPXXJCL
CCPXXPAN
CCROSPAN
CCROSSEL
CCSESSET
CCSETPAN
CCTXXJCL
CCTXXPAN
CCURTPAN
CCURTSEL
CCXLXPAN
CCXXXHLP
CCXXXPAN
CICSCOB
CICSCOBL
CICSCOMP
CICSMAP
CLEANROS
CSHCSH
DATE
DCOB2C
DCOB2CL
DD
DDADIJCL
DDADXJCL
DDAXIJCL
DDAXXJCL
DDBXIJCL
DDBXXJCL
DDCDIJCL
DDCDXJCL
DDCXIJCL
DDCXXJCL
DDD
DDDXIJCL
DDDXXJCL
DDXXXPAN
DECTOHEX
DEDUP
DELDUPS
DIR
DJ
DJN
DL
DOCC
ECHO
EXGET
FINDPGM
FS
FS1
GENDATA
GETJCL
GETLNG
GETY2K
HEXTODEC
IMPEXAML
IN
KEEPALL
LIBLOOK
LOUP
LS
MHR
MHR1
MIXCASE
MSG
MYDSN
NAMEIT
NF
NOROSCOM
NOSEQALL
N1R6
PACKZZZ
PAF
PAFL
PARA
PF
PFIX
PH
PJCL
PRINT
PRINTIT
PROCLOOK
PROSMEM
PUTJCL
QP
RESET
ROSREST
SCANACC
SCANLIB
SCANLMEM
SCANMEM
SCANPFIX
SCANRMEM
SCANROS
SD
SDJ
SHAREACC
SHAREALL
SIGNON
SJ
TEMP80
TSOCHK
TSODATE
TSOSAVE
UNPKZZZ
UPLO
UPPERCAS
URTLOOK
VALIDPFX
X
XREF
XREFFPF
Y2KCODE
Y2KFLDS
