<<$DDA>> : A1=MEMBER  <A2=REP/SUB>  <A3=REP/SUB> A4=LAST?(YES=0)
  EXEC PFX.CCSESSET
  SET STMTCNT MAX
  DECLARE MEMBER ROSVAR<2> URTVAR<2> SUBMIT SAVE<5> EMSG<5>
  DECLARE NVAR PTR CARD CURPOS NMSG RETINFO<4>
  LET MEMBER = A1
  IF A2 EQ 'REP' OR A3 EQ 'REP'
      LET ROSVAR<1> = 'Y'
  ELSE
      LET ROSVAR<1> = 'N'
  ENDIF
  IF A2 EQ 'SUB' OR A3 EQ 'SUB'
      LET SUBMIT = 'Y'
  ELSE
      LET SUBMIT = 'N'
  ENDIF
  DECLARE VARS<15> DESC<15> MSGS<15>
  LET NVAR = 15                     : NUMBER OF VARIABLE NAMES IN PANEL
  LET VARS<01> = 'SRCE'
  LET VARS<02> = 'URTL'
  LET VARS<03> = 'BLNK'
  LET VARS<04> = 'BTST'
  LET VARS<05> = 'APID'
  LET VARS<06> = 'ENVR'
  LET VARS<07> = 'BCOP'
  LET VARS<08> = 'BLOP'
  LET VARS<09> = 'BMOP'
  LET VARS<10> = 'JNAM'
  LET VARS<11> = 'ACCT'
  LET VARS<12> = 'ROOM'
  LET VARS<13> = 'UNAM'
  LET VARS<14> = 'MSGC'
  LET VARS<15> = 'REMT'
  DO <<GETDEFS>>
  SELECT FIRST
    WHEN LENGTH(MEMBER) EQ 0
      LET URTVAR<1> = ''
    WHEN LENGTH(MEMBER) GT 5
      LET URTVAR<1> = SUBSTR(MEMBER 1 6)|'RT'
    WHEN LENGTH(MEMBER) GT 5
      LET URTVAR<1> = MEMBER|'URTVAR<1>'
  ENDSEL
  IF URTVAR<1> NE ''
      EXEC PFX.CCDEFGET 'URTL'
      EXEC PFX.CCURTSEL URTVAR<1> R1
      IF R1 EQ ''
          LET URTVAR<1> = ''
      ELSE
          LET URTVAR<1> = R1
      ENDIF
  ENDIF
  IF URTVAR<1> EQ ''
      LET URTVAR<2> = 'N'
  ELSE
      LET URTVAR<2> = 'Y'
  ENDIF
  LET SAVE<4> = URTVAR<1>
  LET SAVE<5> = URTVAR<2>
  DO <<EDITS>>
  LOOP
    UNTIL NMSG EQ 0 AND SUBMIT NE 'N'
      PANEL ACTIVATE PFX.CCBXXPAN
      DO <<PUTPAN>>
     %PANEL SEND CURSOR P.%CURPOS%
      LET CURPOS = ''
      IF AID EQ 'CLEAR'
          LET NMSG = 0
          LET SUBMIT = 'Q'
      ELSE
          DO <<GETPAN>>
          DO <<EDITS>>
          SELECT FIRST
            WHEN AID EQ 'PF1'
              EXEC PFX.CCHLPSHO 'CCBXX'
              SELECT AWS ROS1
            WHEN AID EQ 'PF2'
              EXEC PFX.CCDEFSET
              DO <<GETDEFS>>
          ENDSEL
          SELECT FIRST
            WHEN NMSG NE 0
              RELOOP
            WHEN AID EQ 'PF9'
              LET SUBMIT = 'Y'
            WHEN AID EQ 'PF8'
              LET SUBMIT = 'A'
          ENDSEL
      ENDIF
  ENDLOOP
  SELECT FIRST
    WHEN SUBMIT EQ 'Y'
      DO <<BUILDJCL>>
      SET MSGLEVEL ERROR
      SUBMIT
      LET PTR = INDEX(LASTERR ' <')
      IF PTR LE 0
          LET PTR = LENGTH(LASTERR)
      ENDIF
     %LET CARD = SUBSTR(LASTERR 1 %PTR%)
      CREATE AWS CCMSGS NONRECOVERABLE LEVEL
      TRAP
      FETCH $$CCMSGS
      TRAP OFF
      %%AWSCOUNT+1% %CARD%
      UPDATE $$CCMSGS
    WHEN SUBMIT EQ 'A'
      DO <<BUILDJCL>>
      ATTACH
      IF A4 GT 0
          RESPONSE 'WHEN READY TO CONTINUE, ENTER "GO"'
          PAUSE
      ENDIF
    WHEN NONE
      DELETE
  ENDSEL
  RETURN
<<GETDEFS>> PROC
  LOOP PTR FROM 1 TO NVAR BY 1
      EXEC PFX.CCDEFGET VARS<PTR>
      LET DESC<PTR> = R1
  ENDLOOP
  SELECT AWS ROS1
ENDPROC
<<BUILDJCL>> PROC
  LOOP PTR FROM 1 TO NVAR BY 1
    UNTIL VARS<PTR> EQ 'BTST'
  ENDLOOP
  SELECT AWS ROS1
  DELETE
  COPY PFX.CCJOBJCL T
:::::::::::::: INSERT ACS DESTINATION INFO
  TRAP ON
  COPY ACSDEST B
  %EDIT /&TITLE1/%MEMBER%/
  TRAP OFF
  IF DESC<PTR> EQ 'Y'
      IF URTVAR<1> NE ''
          COPY PFX.DDADIJCL B
         +EDIT /?USERID/+GETKEY(S.PREFIX)+/
      ELSE
          COPY PFX.DDAXIJCL B
         +EDIT /?USERID/+GETKEY(S.PREFIX)+/
      ENDIF
  ELSE
      IF URTVAR<1> NE ''
          COPY PFX.DDADXJCL B
      ELSE
          COPY PFX.DDAXXJCL B
      ENDIF
  ENDIF
  TRAP
  LET CARD = ''
  LOOP PTR FROM 1 TO NVAR BY 1
      SELECT FIRST
        WHEN VARS<PTR> EQ 'APID'
          IF TRIM(DESC<PTR>) EQ 'ACS'
:*--------------------------------------------------------------------*
:*            FIND /AUXINC1/                                          *
:*           %EDIT /HHLQ.?APID.SAT.LIBMAST/PROD.SOURCE.LIBMAST/%SEQ%  *
:*            FIND /AUXINC2/                                          *
:*           %EDIT /HHLQ.?APID.?ENVR.LIBMAST/PROD.SOURCE.LIBMAST/%SEQ%*
:*            FIND /AUXINC3/                                          *
:*           %EDIT /DUMMY/DSN=HHLQ.?APID.?ENVR.LIBMAST,DISP=SHR/%SEQ% *
:*--------------------------------------------------------------------*
              FIND /AUXINC2/
             %EDIT /DSN=HHLQ.?APID.?ENVR.LIBMAST,DISP=SHR/DUMMY/%SEQ%
              EDIT /CLASS=J/CLASS=K/
          ENDIF
        WHEN VARS<PTR> EQ 'BMOP'
          LET NMSG = NMSG + 1
          IF INDEX(DESC<PTR> 'RMODE=24') GT 0
              EDIT /?DLEN/24/
          ELSE
              EDIT /?DLEN/31/
          ENDIF
        WHEN VARS<PTR> EQ 'UNAM'
          LET NMSG = NMSG + 1
          LET CARD = DESC<PTR>
      ENDSEL
     %EDIT `?%VARS<PTR>%`%DESC<PTR>%`
  ENDLOOP
 %EDIT `?PSWD`%RETINFO<1>%`
 %EDIT `?PGMR`%RETINFO<2>%`
 %EDIT `?DESC`%RETINFO<3>%`
 %EDIT `?LNAM`%RETINFO<4>%`
 %EDIT `?MEMB`%MEMBER%`
 %EDIT `?URTN`%URTVAR<1>%`
 %EDIT `?JPRO`%TRIM(SUBSTR(CARD|' '|MEMBER 1 20))%`
  POINT AWS LINE T
  FIND /-REP ALL/
  IF ROSVAR<1> EQ 'Y' AND ROSVAR<2> NE '$$CANCEL' AND ROSVAR<2> NE ''
      %COPY %ROSVAR<2>% %SEQ%
  ELSE
      %DELETE %SEQ%
  ENDIF
  TRAP OFF
ENDPROC
<<GETPAN>> PROC
  LET MEMBER  = TRIM(TRIM(P.MEMBER  '_'))
  LET ROSVAR<1> = TRIM(TRIM(P.REPLACE '_'))
  LET ROSVAR<2> = TRIM(TRIM(P.ROSMEM  '_'))
  LET URTVAR<1> = TRIM(TRIM(P.URT     '_'))
  LET URTVAR<2> = TRIM(TRIM(P.DATACOM '_'))
  LOOP PTR FROM 1 TO NVAR BY 1
     %LET CARD = TRIM(TRIM(P.%VARS<PTR>% '_'))
      IF CARD NE DESC<PTR>
          LET DESC<PTR> = CARD
      ENDIF
  ENDLOOP
  LET CARD = ''
ENDPROC
<<PUTPAN>> PROC
  LET NMSG = 0
  LET P.MEMBER = PAD(MEMBER MAXLEN(P.MEMBER) '_')
  IF EMSG<1> NE ''
      LET NMSG = NMSG + 1
      LET P.MSG<NMSG> = EMSG<1>
      LET A.MEMBER = 'UHM'
      LET CURPOS = 'MEMBER'
  ENDIF
  LET P.REPLACE = PAD(ROSVAR<1> MAXLEN(P.REPLACE) '_')
  IF EMSG<2> NE ''
      LET NMSG = NMSG + 1
      LET P.MSG<NMSG> = EMSG<2>
      LET A.REPLACE = 'UHM'
      LET CURPOS = 'REPLACE'
  ENDIF
  IF ROSVAR<1> EQ 'Y'
      LET A.ROSLIT = 'SL'
      LET P.ROSMEM = PAD(ROSVAR<2> MAXLEN(P.ROSMEM) '_')
      IF EMSG<3> NE ''
          LET NMSG = NMSG + 1
          LET P.MSG<NMSG> = EMSG<3>
          IF INDEX(EMSG<3> 'CANCELLED') GT 0
              LET A.ROSMEM = 'ULM'
          ELSE
              LET CURPOS = 'ROSMEM'
              LET A.ROSMEM = 'UHM'
          ENDIF
      ELSE
          LET A.ROSMEM = 'ULM'
      ENDIF
  ELSE
      LET A.ROSLIT = 'SI'
      LET A.ROSMEM = 'SIM'
  ENDIF
  LET P.URT = PAD(URTVAR<1> MAXLEN(P.URT) '_')
  IF EMSG<4> NE ''
      LET NMSG = NMSG + 1
      LET P.MSG<NMSG> = EMSG<4>
      LET A.URT = 'UHM'
      LET CURPOS = 'URT'
  ENDIF
  LET P.DATACOM = PAD(URTVAR<2> MAXLEN(P.DATACOM) '_')
  IF EMSG<5> NE ''
      LET NMSG = NMSG + 1
      LET P.MSG<NMSG> = EMSG<5>
      LET A.DATACOM = 'UHM'
      LET CURPOS = 'DATACOM'
  ENDIF
  LOOP PTR FROM 1 TO NVAR BY 1
     %LET P.%VARS<PTR>% = PAD(DESC<PTR> MAXLEN(P.%VARS<PTR>%) '_')
      IF MSGS<PTR> NE ''
          LET NMSG = NMSG + 1
          IF NMSG LT 4
              LET P.MSG<NMSG> = MSGS<PTR>
          ENDIF
          IF INDEX(MSGS<PTR> 'DEFAULT' 1) LE 0
             %LET A.%VARS<PTR>% = 'UHM'
              IF CURPOS EQ ''
                  LET CURPOS = VARS<PTR>
              ENDIF
          ENDIF
      ENDIF
  ENDLOOP
  IF NMSG EQ 0
      LET P.MSG<1> = 'PRESS "PF8" TO EDIT JCL IN YOUR AWS,'
      LET P.MSG<1> = P.MSG<1> | ' "PF9" TO SUBMIT THE JOB'
  ENDIF
  IF CURPOS EQ ''
      LET CURPOS = 'MEMBER'
  ENDIF
ENDPROC
<<EDITS>> PROC
  LET NMSG = 0
  LET EMSG<1> = EMSG<2> = EMSG<3> = EMSG<4> = EMSG<5> = ''
  LOOP PTR FROM 1 TO NVAR BY 1
    UNTIL VARS<PTR> EQ 'SRCE'
  ENDLOOP
  IF LENGTH(MEMBER) EQ 0
      LET EMSG<1> = 'A LIBRARIAN MEMBER NAME IS REQUIRED'
      LET NMSG = NMSG + 1
  ELSE
      IF MEMBER NE SAVE<1>
          IF LENGTH(DESC<PTR>) EQ 0
              EXEC PFX.CCDEFGET VARS<PTR>
              SELECT AWS ROS1
              LET DESC<PTR> = R1
          ENDIF
          EXEC PFX.CCMEMSEL MEMBER DESC<PTR>
          SELECT AWS ROS1
          IF R1 EQ ''
              LET EMSG<1> = 'SELECTED MEMBER NAME HAS NO MATCH'
              LET EMSG<1> = EMSG<1> | ' ON LIBRARIAN'
              LET NMSG = NMSG + 1
          ELSE
              LET MEMBER     = R1
              LET RETINFO<1> = R2
              LET RETINFO<2> = R3
              LET RETINFO<3> = R4
              LET RETINFO<4> = R5
          ENDIF
      ENDIF
  ENDIF
  SELECT FIRST
    WHEN ROSVAR<1> EQ 'N'
      LET ROSVAR<2> = ''
    WHEN ROSVAR<1> EQ 'Y'
      IF ROSVAR<2> NE SAVE<3> OR ROSVAR<2> EQ ''
          IF ROSVAR<2> EQ ''
              LET ROSVAR<2> = MEMBER
          ENDIF
          EXEC PFX.CCROSSEL ROSVAR<2>
          SELECT AWS ROS1
          SELECT FIRST
            WHEN R1 EQ ''
              LET EMSG<3> = 'SELECTED ROSCOE MEMBER NAME HAS NO MATCH'
              LET EMSG<3> = EMSG<3> | ' IN YOUR ROSCOE LIBRARY'
              LET NMSG = NMSG + 1
            WHEN R1 EQ '$$CANCEL'
              LET EMSG<3> = 'LIBRARY MEMBER REPLACEMENT FROM ROSCOE'
              LET EMSG<3> = EMSG<3> | ' HAS BEEN CANCELLED'
              LET ROSVAR<2> = R1
            WHEN NONE
              LET ROSVAR<2> = R1
          ENDSEL
      ENDIF
    WHEN NONE
      LET EMSG<2> = '"REPLACE" MUST BE "Y"(YES) OR "N"(NO)'
      LET NMSG = NMSG + 1
  ENDSEL
  IF URTVAR<2> EQ 'Y' AND URTVAR<1> EQ ''
      LET URTVAR<1> = SUBSTR(MEMBER 1 6)|'RT'
  ENDIF
  IF URTVAR<2> EQ 'N'
      IF URTVAR<1> NE ''
          SELECT FIRST
            WHEN URTVAR<1> EQ SAVE<4>
              LET URTVAR<1> = ''
            WHEN URTVAR<2> EQ SAVE<5>
              LET URTVAR<2> = 'Y'
            WHEN NONE
              LET EMSG<4> = 'EXISTENCE OF A URT IS INCONSISTENT'
              LET EMSG<4> = EMSG<4>|' WITH DATACOM = "N"'
          ENDSEL
      ENDIF
  ENDIF
  IF URTVAR<2> EQ 'Y'
      IF URTVAR<1> NE SAVE<4> OR URTVAR<2> NE SAVE<5>
          LOOP PTR FROM 1 TO NVAR BY 1
            UNTIL VARS<PTR> EQ 'URTL'
          ENDLOOP
          EXEC PFX.CCURTSEL URTVAR<1> DESC<PTR>
          SELECT AWS ROS1
          IF R1 EQ ''
              LET EMSG<4> = 'SELECTED URT NAME HAS NO MATCH'
              LET EMSG<4> = EMSG<4> | ' IN THE URT LIBRARY'
              LET NMSG = NMSG + 1
          ELSE
              LET URTVAR<1> = R1
          ENDIF
      ENDIF
  ELSE
      IF URTVAR<2> NE 'N'
          LET EMSG<5> = '"DATACOM" MUST BE "Y"(YES) OR "N"(NO)'
          LET NMSG = NMSG + 1
      ENDIF
  ENDIF
  LOOP PTR FROM 1 TO NVAR BY 1
      IF LENGTH(DESC<PTR>) EQ 0
          EXEC PFX.CCDEFGET VARS<PTR>
          SELECT AWS ROS1
          LET DESC<PTR> = R1
      ENDIF
      LET MSGS<PTR> = ''
      SELECT FIRST
        WHEN VARS<PTR> EQ 'BTST'
          SELECT FIRST
::::::::::::WHEN DESC<PTR> EQ 'Y'
::::::::::::::LET MSGS<PTR> = 'INTERTEST FOR BATCH NOT YET AVAILABLE'
            WHEN DESC<PTR> NE 'Y' AND DESC<PTR> NE 'N'
              LET MSGS<PTR> = 'INTERTEST SELECTION MUST BE "Y" OR "N"'
          ENDSEL
        WHEN VARS<PTR> EQ 'APID'
          IF LENGTH(DESC<PTR>) EQ 0
              LET MSGS<PTR> = 'APPLICATION ID IS MISSING'
          ENDIF
        WHEN VARS<PTR> EQ 'JNAM'
          SELECT FIRST
:*--------------------------------------------------------------------*
:*          WHEN SUBSTR(DESC<PTR> 1 1) NE 'D'                         *
:*            LET MSGS<PTR> = 'JOB NAME STUB MUST BEGIN WITH'         *
:*            LET MSGS<PTR> = MSGS<PTR> | ' "D" FOR DEVELOPMENT'      *
:*--------------------------------------------------------------------*
            WHEN LENGTH(DESC<PTR>) LT 3
              LET MSGS<PTR> = 'JOB NAME MUST BE AT LEAST'
              LET MSGS<PTR> = MSGS<PTR> | ' 3 CHARACTERS LONG'
            WHEN NOT CONFORM(DESC<PTR> 'AN')
              LET MSGS<PTR> = 'CHARACTERS IN JOB NAME MUST'
              LET MSGS<PTR> = MSGS<PTR> | ' BE ALPHANUMERIC'
            WHEN NONE
              EXEC PFX.CCDEFGET 'JNAM'
              IF SUBSTR(DESC<PTR> 1 LENGTH(R1)) EQ R1
                  LET CARD = PAD(SAVE<1> 6)
                  LET CARD = SUBSTR(CARD LENGTH(R1)-1 8-LENGTH(R1))
                  LET CARD = TRIM(CARD)
                  SELECT FIRST
                    WHEN DESC<PTR> EQ R1
                    WHEN TRIM(SUBSTR(DESC<PTR> LENGTH(R1)+1)) EQ CARD
                    WHEN ANY
                      LET CARD = PAD(MEMBER 6)
                      LET CARD = SUBSTR(CARD LENGTH(R1)-1 8-LENGTH(R1))
                      LET DESC<PTR> = R1|CARD
                  ENDSEL
              ENDIF
          ENDSEL
        WHEN VARS<PTR> EQ 'ACCT'
          IF LENGTH(DESC<PTR>) NE 4
              LET MSGS<PTR> = 'ACCOUNT CODE MUST CONTAIN 4 CHARACTERS'
          ENDIF
      ENDSEL
      IF MSGS<PTR> NE ''
          LET NMSG = NMSG + 1
      ENDIF
  ENDLOOP
  IF EMSG<1> EQ ''
      LET SAVE<1> = MEMBER
  ENDIF
  IF EMSG<3> EQ ''
      LET SAVE<3> = ROSVAR<2>
  ENDIF
ENDPROC
